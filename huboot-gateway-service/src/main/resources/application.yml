server:
  port: 7200
  tomcat:
    uri-encoding: UTF-8

spring:
  application:
    name: gateway-service
  http:
    encoding:
      charset: UTF-8
      force: true
  cloud:
    gateway: # spring cloud gateway 路由配置方式  https://blog.csdn.net/zxl646801924/article/details/80759708  http://springcloud.cn/view/349
      discovery: #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator: #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true
#      routes:                      #在java代码中配置RoutesConfig
#      - id: 163                     #网关路由到网易官网
#        uri: http://www.163.com/
#        predicates:
#        - Path=/163/**
#      - id: order-service           #网关路由到订单服务order-service
#        uri: lb://order-service
#        predicates:
#        - Path=/order-service/**
#        filters:
#        - name: RequestRateLimiter
#          args:
#            redis-rate-limiter.replenishRate: 10
#            redis-rate-limiter.burstCapacity: 20
#      - id: user-service
#        uri: lb://user-service
#        predicates:
#        - Pach=/user-service/**
  #redis
  redis:
    database: ${redis.database}
    host: ${redis.host}
    port: ${redis.port}
    password: ${redis.password}
    jedis:
      pool:
        max-idle: 8
        min-idle: 0
        max-active: 8
        max-wait: 1

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false
        #断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
#        isolation:
#          thread:
#            timeoutInMilliseconds: 100000

